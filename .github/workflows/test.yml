name: test

on: [pull_request]

jobs:
  pytest:
    name: pytest
    runs-on: ubuntu-latest
    steps:
        - name: Checkout source repository                                  
          uses: actions/checkout@v2

        - name: Download state src
          run: |
            curl -H "Authorization: token ${STATE_SRC_TOKEN} " \
              -H 'Accept: application/vnd.github.v3.raw' \
              -O \
              -L https://api.github.com/repos/uedar/state-private/contents/state-5.6.10.tgz
          env: 
            STATE_SRC_TOKEN: ${{ secrets.STATE_SRC_TOKEN }}

        - name: Set up Docker Buildx
          uses: docker/setup-buildx-action@v1
      
        - name: Cache Docker layers
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ runner.os }}-buildx-${{ github.sha }}
            restore-keys: |
              ${{ runner.os }}-buildx-

        - uses: docker/build-push-action@v3
          with:
            context: .
            push: false
            tags: ${{ github.sha }}
            cache-from: type=local,src=/tmp/.buildx-cache
            cache-to: type=local,dest=/tmp/.buildx-cache-new
            build-args: |
               "state_src=state-5.6.10.tgz"

        - name: Move cache
          run: |
            rm -rf /tmp/.buildx-cache
            mv /tmp/.buildx-cache-new /tmp/.buildx-cache
        
        - name: Start docker
          run: |
            docker compose up -d
        - name: Run pytest                                       
          run: docker compose exec -T state_interface pytest /ase-state-interface

  flake8-lint:
    runs-on: ubuntu-latest
    name: flake8
    steps:
      - name: Check out source repository
        uses: actions/checkout@v2
      - name: Set up Python environment
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: flake8 Lint
        uses: reviewdog/action-flake8@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          reporter: github-pr-review
          fail_on_error: true
          flake8_args: "--max-line-length 119"
